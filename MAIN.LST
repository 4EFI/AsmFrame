Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 1
main.asm



      1
      2				     .186
      3	0000			     .model tiny
      4	0000			     .code
      5				     org 100h
      6
      7				     locals __
      8
      9				     include	     TOOLS.ASM			     ; Exit
1    10
1    11				     ;------------------------------------------------
1    12				     ;	     EXIT PROGRAM
1    13				     ;------------------------------------------------
1    14				     ; Entry:	     NONE
1    15				     ; EXIT:	     NONE
1    16				     ; DESTROYS: AX
1    17				     ;------------------------------------------------
1    18
1    19				     EXIT	     macro
1    20							     nop
1    21							     mov ax, 4c00h
1    22							     int 21h
1    23							     nop
1    24							     endm
1    25
1    26				     ;------------------------------------------------
     27
     28				     ;------------------------------------------------
     29
     30	0100  BB B800		     Start:	     mov bx, 0b800h	     ; ES = VideoSeg
     31	0103  8E C3					     mov es, bx
     32
     33	0105  B8 0020					     mov byte ptr ax, '	'
     34	0108  E8 0012					     call ClrScrn
     35
     36	010B  B7 00					     mov bh, 0d		     ; X
     37	010D  B3 04					     mov bl, 4d		     ; Y
     38	010F  B5 32					     mov ch, 50d	     ; WIDTH
     39	0111  B1 0A					     mov cl, 10d	     ; HEIGHT
     40	0113  E8 0064					     call PrintBox
     41
     42							     ; mov byte	ptr al,	'v'
     43							     ; mov bx, 1920
     44							     ; call PrintBin
     45
     46							     EXIT
1    47	0116  90					     nop
1    48	0117  B8 4C00					     mov ax, 4c00h
1    49	011A  CD 21					     int 21h
1    50	011C  90					     nop
     51
     52				     ;------------------------------------------------
     53
     54				     include	     SCR_HNDL.ASM    ; Clear Screen function
1    55
1    56				     ; SCREEN HANDLER
1    57
Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 2
main.asm



1    58				     ;------------------------------------------------
1    59				     ;	     CLEAR SCREEN BY SYM
1    60				     ;------------------------------------------------
1    61				     ; ENTRY:	     AH	= COLOR	ATTR
1    62				     ;			     Al	= SYM
1    63				     ; EXIT:	     NONE
1    64				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1    65				     ; DESTROYS:     BX	CX
1    66				     ;------------------------------------------------
1    67
1    68	011D			     ClrScrn		     proc
1    69
1    70	011D  BB 0000						     mov bx, 0			     ; bx = 0
1    71	0120  B9 07D0						     mov cx, 80d * 25d
1    72
1    73	0123  26: 89 07		     __Next:		     mov es:[bx], ax
1    74	0126  83 C3 02						     add bx, 2
1    75
1    76	0129  E2 F8						     loop __Next
1    77
1    78	012B  C3						     ret
1    79	012C							     endp
1    80
1    81				     ;------------------------------------------------
1    82				     ;	     GET VIDEO POS FROM	(X; Y)
1    83				     ;------------------------------------------------
1    84				     ; ENTRY:	     BH	= X LEFT CORNER	COORDS [0; 79]
1    85				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1    86				     ; EXIT:	     AX	= POS
1    87				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1    88				     ; DESTROYS:     AX	DX
1    89				     ;------------------------------------------------
1    90
1    91	012C			     GetVideoPos	     proc
1    92
1    93	012C  B0 A0						     mov al, 160d    ; ax = 160	* Y + 2	* X
1    94	012E  F6 E3						     mul bl
1    95	0130  BA 0000						     mov dx, 0
1    96	0133  02 D7						     add dl, bh
1    97	0135  03 C2						     add ax, dx
1    98
1    99	0137  C3						     ret
1   100	0138							     endp
1   101
1   102				     ;------------------------------------------------
1   103				     ;	     PRINT SYM IN (X; Y)
1   104				     ;------------------------------------------------
1   105				     ; ENTRY:	     AH	= SYM COLOR
1   106				     ;			     AL	= SYM CHAR
1   107				     ;			     BH	= X LEFT CORNER	COORDS [0; 79]
1   108				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   109				     ; EXIT:	     NONE
1   110				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   111				     ; DESTROYS:     DX	DI
1   112				     ;------------------------------------------------
1   113
1   114	0138			     PrintChar		     proc
Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 3
main.asm



1   115
1   116	0138  D0 E7						     shl bh, 1		     ; bh /= 2
1   117
1   118	013A  50						     push ax		     ; push sym
1   119
1   120	013B  E8 FFEE						     call GetVideoPos
1   121
1   122	013E  8B F8						     mov di, ax		     ; print( ax )
1   123	0140  58						     pop ax
1   124	0141  AB						     stosw
1   125
1   126	0142  D0 EF						     shr bh, 1		     ; bh *= 2
1   127
1   128	0144  C3						     ret
1   129	0145							     endp
1   130
1   131				     ;------------------------------------------------
1   132				     ;	     PRINT HORIZONTAL LINE IN (X; Y)
1   133				     ;------------------------------------------------
1   134				     ; ENTRY:	     AH	= SYM COLOR
1   135				     ;			     AL	= SYM CHAR
1   136				     ;			     BH	= X LEFT CORNER	COORDS [0; 79]
1   137				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   138				     ;			     CH	= WIDTH
1   139				     ; EXIT:	     NONE
1   140				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   141				     ; DESTROYS:     DX	DI
1   142				     ;------------------------------------------------
1   143
1   144	0145			     PrintHrzLine    proc
1   145
1   146	0145  80 FD 00						     cmp ch, 0
1   147	0148  76 11						     jbe __EndFunc
1   148
1   149	014A  53						     push bx
1   150
1   151	014B  33 D2						     xor dx, dx		     ; i = 0
1   152
1   153	014D  52			     __Next:		     push dx
1   154	014E  E8 FFE7							     call PrintChar
1   155	0151  5A							     pop  dx
1   156
1   157	0152  FE C7							     inc bh
1   158	0154  FE C6							     inc dh
1   159
1   160	0156  3A F5							     cmp dh, ch
1   161	0158  75 F3							     jne __Next
1   162
1   163	015A  5B						     pop bx
1   164
1   165	015B				     __EndFunc:
1   166
1   167	015B  C3						     ret
1   168	015C							     endp
1   169
1   170				     ;------------------------------------------------
1   171				     ;	     PRINT VERTICAL LINE IN (X;	Y)
Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 4
main.asm



1   172				     ;------------------------------------------------
1   173				     ; ENTRY:	     AH	= SYM COLOR
1   174				     ;			     AL	= SYM CHAR
1   175				     ;			     BH	= X LEFT CORNER	COORDS [0; 79]
1   176				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   177				     ;			     CL	= HEIGHT
1   178				     ; EXIT:	     NONE
1   179				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   180				     ; DESTROYS:     DX	DI
1   181				     ;------------------------------------------------
1   182
1   183	015C			     PrintVrtLine    proc
1   184
1   185	015C  80 F9 00						     cmp cl, 0
1   186	015F  76 11						     jbe __EndFunc
1   187
1   188	0161  53						     push bx
1   189
1   190	0162  33 D2						     xor dx, dx		     ; i = 0
1   191
1   192	0164  52			     __Next:		     push dx
1   193	0165  E8 FFD0							     call PrintChar
1   194	0168  5A							     pop  dx
1   195
1   196	0169  FE C3							     inc bl
1   197	016B  FE C2							     inc dl
1   198
1   199	016D  3A D1							     cmp dl, cl
1   200	016F  75 F3							     jne __Next
1   201
1   202	0171  5B						     pop bx
1   203
1   204	0172				     __EndFunc:
1   205
1   206	0172  C3						     ret
1   207	0173							     endp
1   208
1   209				     ;------------------------------------------------
1   210				     ;	     PRINT BOX
1   211				     ;------------------------------------------------
1   212				     ; ENTRY:	     BH	= X LEFT CORNER	COORDS [0; 79]
1   213				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   214				     ;			     CH	= WIDTH
1   215				     ;			     CL	= HEIGHT
1   216				     ; EXIT:	     NONE
1   217				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   218				     ; DESTROYS:     AX	DX DI
1   219				     ;------------------------------------------------
1   220
1   221	0173  1F		     box_clr db		     01fh    ; yellow on red
1   222
1   223	0174  C9		     lt_ch   db		     0c9h    ; left  top  char
1   224	0175  C8		     ld_ch   db		     0c8h    ; left  down char
1   225	0176  BB		     rt_ch   db		     0bbh    ; right top  char
1   226	0177  BC		     rd_ch   db		     0bch    ; rigth down char
1   227
1   228	0178  BA		     v_ch    db		     0bah    ; vertical	      char
Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 5
main.asm



1   229	0179  CD		     h_ch    db		     0cdh    ; horizontal char
1   230
1   231	017A			     PrintBox		     proc
1   232
1   233	017A  53						     push bx			     ; print left top char
1   234	017B  A0 0174r						     mov al, lt_ch
1   235	017E  8A 26 0173r					     mov ah, box_clr
1   236	0182  E8 FFB3						     call PrintChar
1   237	0185  5B						     pop bx
1   238
1   239	0186  53						     push bx			     ; print left down char
1   240	0187  02 D9						     add bl, cl
1   241	0189  80 EB 01						     sub bl, 1
1   242	018C  A0 0175r						     mov al, ld_ch
1   243	018F  8A 26 0173r					     mov ah, box_clr
1   244	0193  E8 FFA2						     call PrintChar
1   245	0196  5B						     pop bx
1   246
1   247	0197  53						     push bx			     ; print right top char
1   248	0198  02 FD						     add bh, ch
1   249	019A  80 EF 01						     sub bh, 1
1   250	019D  A0 0176r						     mov al, rt_ch
1   251	01A0  8A 26 0173r					     mov ah, box_clr
1   252	01A4  E8 FF91						     call PrintChar
1   253	01A7  5B						     pop bx
1   254
1   255	01A8  53						     push bx			     ; print right down	char
1   256	01A9  02 FD						     add bh, ch
1   257	01AB  80 EF 01						     sub bh, 1
1   258	01AE  02 D9						     add bl, cl
1   259	01B0  80 EB 01						     sub bl, 1
1   260	01B3  A0 0177r						     mov al, rd_ch
1   261	01B6  8A 26 0173r					     mov ah, box_clr
1   262	01BA  E8 FF7B						     call PrintChar
1   263	01BD  5B						     pop bx
1   264
1   265	01BE  53						     push bx			     ; print top horizontal line
1   266	01BF  80 C7 01						     add bh, 1
1   267	01C2  A0 0179r						     mov al, h_ch
1   268	01C5  8A 26 0173r					     mov ah, box_clr
1   269	01C9  80 ED 02						     sub ch, 2
1   270	01CC  E8 FF76						     call PrintHrzLine
1   271	01CF  80 C5 02						     add ch, 2
1   272	01D2  5B						     pop bx
1   273
1   274	01D3  53						     push bx			     ; print down horizontal line
1   275	01D4  80 C7 01						     add bh, 1
1   276	01D7  02 D9						     add bl, cl
1   277	01D9  80 EB 01						     sub bl, 1
1   278	01DC  A0 0179r						     mov al, h_ch
1   279	01DF  8A 26 0173r					     mov ah, box_clr
1   280	01E3  80 ED 02						     sub ch, 2
1   281	01E6  E8 FF5C						     call PrintHrzLine
1   282	01E9  80 C5 02						     add ch, 2
1   283	01EC  5B						     pop bx
1   284
1   285	01ED  53						     push bx			     ; print left vertical line
Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 6
main.asm



1   286	01EE  80 C3 01						     add bl, 1
1   287	01F1  A0 0178r						     mov al, v_ch
1   288	01F4  8A 26 0173r					     mov ah, box_clr
1   289	01F8  80 E9 02						     sub cl, 2
1   290	01FB  E8 FF5E						     call PrintVrtLine
1   291	01FE  80 C1 02						     add cl, 2
1   292	0201  5B						     pop bx
1   293
1   294	0202  53						     push bx			     ; print right vertical line
1   295	0203  80 C3 01						     add bl, 1
1   296	0206  02 FD						     add bh, ch
1   297	0208  80 EF 01						     sub bh, 1
1   298	020B  A0 0178r						     mov al, v_ch
1   299	020E  8A 26 0173r					     mov ah, box_clr
1   300	0212  80 E9 02						     sub cl, 2
1   301	0215  E8 FF44						     call PrintVrtLine
1   302	0218  80 C1 02						     add cl, 2
1   303	021B  5B						     pop bx
1   304
1   305	021C  C3						     ret
1   306	021D							     endp
1   307
1   308				     ;------------------------------------------------
    309				     include	     NUM_CNVR.ASM    ; Print AX	in BIN/DEC/HEX
1   310
1   311				     ;------------------------------------------------
1   312				     ;	     AX	TO BIN
1   313				     ;------------------------------------------------
1   314				     ; ENTRY:	     AX	= NUM
1   315				     ;			     BH	= X LEFT CORNER	COORDS [0; 79]
1   316				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   317				     ; EXIT:	     NONE
1   318				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   319				     ; DESTROYS:     CX	DX DI
1   320				     ;------------------------------------------------
1   321
1   322	021D			     PrintBin		     proc
1   323
1   324	021D  50						     push ax
1   325
1   326	021E  E8 FF0B						     call GetVideoPos		     ; AX = Video position from	(X; +
    327				     Y)
1   328	0221  BF 0020						     mov di, 16d * 2d		     ; i = 16 *	2 + AX
1   329	0224  03 F8						     add di, ax
1   330	0226  FD						     std
1   331
1   332	0227  58						     pop  ax
1   333
1   334	0228			     __Next:		     ; shr ax, 1			     ; AX /= 2
1   335
1   336	0228  B4 70						     mov byte ptr ah, 70h    ; black on	white
1   337
1   338	022A  83 EF 02						     sub di, 2				     ; print( ax ) // with 1+
    339				     sym left( 2 bytes )
1   340	022D  AB						     stosw
1   341	022E  83 C7 02						     add di, 2
1   342
Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 7
main.asm



1   343								     ; mov al,
1   344	0231  B4 00						     mov ah, 0
1   345
1   346	0233  3B FB						     cmp di, bx				     ; if( cx == bx )
1   347	0235  75 F1						     jne __Next
1   348
1   349	0237  8B C2						     mov ax, dx				     ; AX = DX
1   350
1   351	0239  C3						     ret
1   352	023A							     endp
1   353
1   354				     ;------------------------------------------------
    355
    356				     end		     Start
Turbo Assembler	 Version 4.1	    02/17/23 25:36:28	    Page 8
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/17/23"
??FILENAME			  Text	 "main	  "
??TIME				  Text	 "25:36:28"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0103H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MAIN
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BOX_CLR				  Byte	 DGROUP:0173
CLRSCRN				  Near	 DGROUP:011D
GETVIDEOPOS			  Near	 DGROUP:012C
H_CH				  Byte	 DGROUP:0179
LD_CH				  Byte	 DGROUP:0175
LT_CH				  Byte	 DGROUP:0174
PRINTBIN			  Near	 DGROUP:021D
PRINTBOX			  Near	 DGROUP:017A
PRINTCHAR			  Near	 DGROUP:0138
PRINTHRZLINE			  Near	 DGROUP:0145
PRINTVRTLINE			  Near	 DGROUP:015C
RD_CH				  Byte	 DGROUP:0177
RT_CH				  Byte	 DGROUP:0176
START				  Near	 DGROUP:0100
V_CH				  Byte	 DGROUP:0178
__ENDFUNC			  Near	 DGROUP:015B
__ENDFUNC			  Near	 DGROUP:0172
__NEXT				  Near	 DGROUP:0123
__NEXT				  Near	 DGROUP:014D
__NEXT				  Near	 DGROUP:0164
__NEXT				  Near	 DGROUP:0228

Macro Name

EXIT

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  023A Word	  Public  CODE
