Turbo Assembler	 Version 4.1	    02/17/23 23:40:31	    Page 1
main.asm



      1
      2				     .186
      3	0000			     .model tiny
      4	0000			     .code
      5				     org 100h
      6
      7				     locals __
      8
      9				     include	     TOOLS.ASM			     ; Exit
1    10
1    11				     ;------------------------------------------------
1    12				     ;	     EXIT PROGRAM
1    13				     ;------------------------------------------------
1    14				     ; Entry:	     NONE
1    15				     ; EXIT:	     NONE
1    16				     ; DESTROYS: AX
1    17				     ;------------------------------------------------
1    18
1    19				     EXIT	     macro
1    20							     nop
1    21							     mov ax, 4c00h
1    22							     int 21h
1    23							     nop
1    24							     endm
1    25
1    26				     ;------------------------------------------------
     27
     28				     ;------------------------------------------------
     29
     30	0100  BB B800		     Start:	     mov bx, 0b800h	     ; ES = VideoSeg
     31	0103  8E C3					     mov es, bx
     32
     33	0105  B8 0020					     mov byte ptr ax, '	'
     34	0108  E8 0012					     call ClrScrn
     35
     36	010B  B7 00					     mov bh, 0d		     ; X
     37	010D  B3 00					     mov bl, 0d		     ; Y
     38	010F  B5 02					     mov ch, 2d		     ; WIDTH
     39	0111  B1 02					     mov cl, 2d		     ; HEIGHT
     40	0113  E8 005F					     call PrintBox
     41
     42							     ; mov byte	ptr al,	'v'
     43							     ; mov bx, 1920
     44							     ; call PrintBin
     45
     46							     EXIT
1    47	0116  90					     nop
1    48	0117  B8 4C00					     mov ax, 4c00h
1    49	011A  CD 21					     int 21h
1    50	011C  90					     nop
     51
     52				     ;------------------------------------------------
     53
     54				     include	     SCR_HNDL.ASM    ; Clear Screen function
1    55
1    56				     ; SCREEN HANDLER
1    57
Turbo Assembler	 Version 4.1	    02/17/23 23:40:31	    Page 2
main.asm



1    58				     ;------------------------------------------------
1    59				     ;	     CLEAR SCREEN BY SYM
1    60				     ;------------------------------------------------
1    61				     ; ENTRY:	     AH	= COLOR	ATTR
1    62				     ;			     Al	= SYM
1    63				     ; EXIT:	     NONE
1    64				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1    65				     ; DESTROYS:     BX	CX
1    66				     ;------------------------------------------------
1    67
1    68	011D			     ClrScrn		     proc
1    69
1    70	011D  BB 0000						     mov bx, 0			     ; bx = 0
1    71	0120  B9 07D0						     mov cx, 80d * 25d
1    72
1    73	0123  26: 89 07		     __Next:		     mov es:[bx], ax
1    74	0126  83 C3 02						     add bx, 2
1    75
1    76	0129  E2 F8						     loop __Next
1    77
1    78	012B  C3						     ret
1    79	012C							     endp
1    80
1    81				     ;------------------------------------------------
1    82				     ;	     PRINT SYM IN (X, Y)
1    83				     ;------------------------------------------------
1    84				     ; ENTRY:	     AH	= SYM COLOR
1    85				     ;			     AL	= SYM CHAR
1    86				     ;			     BH	= X LEFT CORNER	COORDS [0; 79]
1    87				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1    88				     ; EXIT:	     NONE
1    89				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1    90				     ; DESTROYS:     DX	DI BP
1    91				     ;------------------------------------------------
1    92
1    93	012C			     PrintChar		     proc
1    94
1    95	012C  D0 E7						     shl bh, 1		     ; bh /= 2
1    96
1    97	012E  50						     push ax		     ; push sym
1    98
1    99	012F  B0 A0						     mov al, 160d    ; ax = 160	* Y + 2	* X
1   100	0131  F6 E3						     mul bl
1   101	0133  BA 0000						     mov dx, 0
1   102	0136  02 D7						     add dl, bh
1   103	0138  03 C2						     add ax, dx
1   104
1   105	013A  8B F8						     mov di, ax		     ; print( ax )
1   106	013C  58						     pop ax
1   107	013D  AB						     stosw
1   108
1   109	013E  D0 EF						     shr bh, 1		     ; bh *= 2
1   110
1   111	0140  C3						     ret
1   112	0141							     endp
1   113
1   114				     ;------------------------------------------------
Turbo Assembler	 Version 4.1	    02/17/23 23:40:31	    Page 3
main.asm



1   115				     ;	     PRINT HORIZONTAL LINE IN (X, Y)
1   116				     ;------------------------------------------------
1   117				     ; ENTRY:	     AH	= SYM COLOR
1   118				     ;			     AL	= SYM CHAR
1   119				     ;			     BH	= X LEFT CORNER	COORDS [0; 79]
1   120				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   121				     ;			     CH	= WIDTH
1   122				     ; EXIT:	     NONE
1   123				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   124				     ; DESTROYS:     DX	DI
1   125				     ;------------------------------------------------
1   126
1   127	0141			     PrintHrzLine    proc
1   128
1   129	0141  80 FD 00						     cmp ch, 0
1   130	0144  74 11						     je	__EndFunc
1   131
1   132	0146  53						     push bx
1   133
1   134	0147  33 D2						     xor dx, dx		     ; i = 0
1   135
1   136	0149  52			     __Next:		     push dx
1   137	014A  E8 FFDF							     call PrintChar
1   138	014D  5A							     pop  dx
1   139
1   140	014E  FE C7							     inc bh
1   141	0150  FE C6							     inc dh
1   142
1   143	0152  3A F5							     cmp dh, ch
1   144	0154  75 F3							     jne __Next
1   145
1   146	0156  5B						     pop bx
1   147
1   148	0157				     __EndFunc:
1   149
1   150	0157  C3						     ret
1   151	0158							     endp
1   152
1   153				     ;------------------------------------------------
1   154				     ;	     PRINT VERTICAL LINE IN (X,	Y)
1   155				     ;------------------------------------------------
1   156				     ; ENTRY:	     AH	= SYM COLOR
1   157				     ;			     AL	= SYM CHAR
1   158				     ;			     BH	= X LEFT CORNER	COORDS [0; 79]
1   159				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   160				     ;			     CL	= HEIGHT
1   161				     ; EXIT:	     NONE
1   162				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   163				     ; DESTROYS:     DX	DI
1   164				     ;------------------------------------------------
1   165
1   166	0158			     PrintVrtLine    proc
1   167
1   168	0158  80 F9 00						     cmp cl, 0
1   169	015B  74 11						     je	__EndFunc
1   170
1   171	015D  53						     push bx
Turbo Assembler	 Version 4.1	    02/17/23 23:40:31	    Page 4
main.asm



1   172
1   173	015E  33 D2						     xor dx, dx		     ; i = 0
1   174
1   175	0160  52			     __Next:		     push dx
1   176	0161  E8 FFC8							     call PrintChar
1   177	0164  5A							     pop  dx
1   178
1   179	0165  FE C3							     inc bl
1   180	0167  FE C2							     inc dl
1   181
1   182	0169  3A D1							     cmp dl, cl
1   183	016B  75 F3							     jne __Next
1   184
1   185	016D  5B						     pop bx
1   186
1   187	016E				     __EndFunc:
1   188
1   189	016E  C3						     ret
1   190	016F							     endp
1   191
1   192				     ;------------------------------------------------
1   193				     ;	     PRINT BOX
1   194				     ;------------------------------------------------
1   195				     ; ENTRY:	     BH	= X LEFT CORNER	COORDS [0; 79]
1   196				     ;			     BL	= Y LEFT CORNER	COORDS [0; 24]
1   197				     ;			     CH	= WIDTH
1   198				     ;			     CL	= HEIGHT
1   199				     ; EXIT:	     NONE
1   200				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   201				     ; DESTROYS:     AX	DX DI
1   202				     ;------------------------------------------------
1   203
1   204	016F  DA		     lt_ch   db		     0dah    ; left  top  char
1   205	0170  C0		     ld_ch   db		     0c0h    ; left  down char
1   206	0171  BF		     rt_ch   db		     0bfh    ; right top  char
1   207	0172  D9		     rd_ch   db		     0d9h    ; rigth down char
1   208
1   209	0173  B3		     v_ch    db		     0b3h    ; vertical	      char
1   210	0174  C4		     h_ch    db		     0c4h    ; horizontal char
1   211
1   212	0175			     PrintBox		     proc
1   213
1   214	0175  53						     push bx			     ; print left top char
1   215	0176  A0 016Fr						     mov al, lt_ch
1   216	0179  B4 70						     mov ah, 70h
1   217	017B  E8 FFAE						     call PrintChar
1   218	017E  5B						     pop bx
1   219
1   220	017F  53						     push bx			     ; print left down char
1   221	0180  02 D9						     add bl, cl
1   222	0182  80 EB 01						     sub bl, 1
1   223	0185  A0 0170r						     mov al, ld_ch
1   224	0188  B4 70						     mov ah, 70h
1   225	018A  E8 FF9F						     call PrintChar
1   226	018D  5B						     pop bx
1   227
1   228	018E  53						     push bx			     ; print right top char
Turbo Assembler	 Version 4.1	    02/17/23 23:40:31	    Page 5
main.asm



1   229	018F  02 FD						     add bh, ch
1   230	0191  80 EF 01						     sub bh, 1
1   231	0194  A0 0171r						     mov al, rt_ch
1   232	0197  B4 70						     mov ah, 70h
1   233	0199  E8 FF90						     call PrintChar
1   234	019C  5B						     pop bx
1   235
1   236	019D  53						     push bx			     ; print right down	char
1   237	019E  02 FD						     add bh, ch
1   238	01A0  80 EF 01						     sub bh, 1
1   239	01A3  02 D9						     add bl, cl
1   240	01A5  80 EB 01						     sub bl, 1
1   241	01A8  A0 0172r						     mov al, rd_ch
1   242	01AB  B4 70						     mov ah, 70h
1   243	01AD  E8 FF7C						     call PrintChar
1   244	01B0  5B						     pop bx
1   245
1   246	01B1  53						     push bx			     ; print top horizontal line
1   247	01B2  80 C7 01						     add bh, 1
1   248	01B5  A0 0174r						     mov al, h_ch
1   249	01B8  B4 70						     mov ah, 70h
1   250	01BA  80 ED 02						     sub ch, 2
1   251	01BD  E8 FF81						     call PrintHrzLine
1   252	01C0  80 C5 02						     add ch, 2
1   253	01C3  5B						     pop bx
1   254
1   255	01C4  53						     push bx			     ; print down horizontal line
1   256	01C5  80 C7 01						     add bh, 1
1   257	01C8  02 D9						     add bl, cl
1   258	01CA  80 EB 01						     sub bl, 1
1   259	01CD  A0 0174r						     mov al, h_ch
1   260	01D0  B4 70						     mov ah, 70h
1   261	01D2  80 ED 02						     sub ch, 2
1   262	01D5  E8 FF69						     call PrintHrzLine
1   263	01D8  80 C5 02						     add ch, 2
1   264	01DB  5B						     pop bx
1   265
1   266	01DC  53						     push bx			     ; print left vertical line
1   267	01DD  80 C3 01						     add bl, 1
1   268	01E0  A0 0173r						     mov al, v_ch
1   269	01E3  B4 70						     mov ah, 70h
1   270	01E5  80 E9 02						     sub cl, 2
1   271	01E8  E8 FF6D						     call PrintVrtLine
1   272	01EB  80 C1 02						     add cl, 2
1   273	01EE  5B						     pop bx
1   274
1   275	01EF  53						     push bx			     ; print right vertical line
1   276	01F0  80 C3 01						     add bl, 1
1   277	01F3  02 FD						     add bh, ch
1   278	01F5  80 EF 01						     sub bh, 1
1   279	01F8  A0 0173r						     mov al, v_ch
1   280	01FB  B4 70						     mov ah, 70h
1   281	01FD  80 E9 02						     sub cl, 2
1   282	0200  E8 FF55						     call PrintVrtLine
1   283	0203  80 C1 02						     add cl, 2
1   284	0206  5B						     pop bx
1   285
Turbo Assembler	 Version 4.1	    02/17/23 23:40:31	    Page 6
main.asm



1   286	0207  C3						     ret
1   287	0208							     endp
1   288
1   289				     ;------------------------------------------------
    290				     include	     NUM_CNVR.ASM    ; Print AX	in BIN/DEC/HEX
1   291
1   292				     ;------------------------------------------------
1   293				     ;	     AX	TO BIN
1   294				     ;------------------------------------------------
1   295				     ; ENTRY:	     AX	= NUM
1   296				     ;			     BX	= POS
1   297				     ; EXIT:	     NONE
1   298				     ; EXPECTS:	     ES	= 0b800h (VIDEO	SEGMENT)
1   299				     ; DESTROYS:     BX	CX DX DI
1   300				     ;------------------------------------------------
1   301
1   302	0208			     PrintBin		     proc
1   303
1   304	0208  8B D0						     mov dx, ax				     ; DX = AX
1   305	020A  8B C8						     mov cx, ax
1   306
1   307	020C  BF 0020						     mov di, 16d * 2d		     ; i = 16 *	2
1   308	020F  03 FB						     add di, bx				     ; di += bx
1   309
1   310	0211  FD						     std
1   311
1   312	0212			     __Next:		     ; shr ax, 1			     ; AX /= 2
1   313
1   314	0212  B4 70						     mov byte ptr ah, 70h    ; black on	white
1   315
1   316	0214  83 EF 02						     sub di, 2				     ; print( ax ) // with 1+
    317				     sym left( 2 bytes )
1   318	0217  AB						     stosw
1   319	0218  83 C7 02						     add di, 2
1   320
1   321								     ; mov al,
1   322	021B  B4 00						     mov ah, 0
1   323
1   324	021D  3B FB						     cmp di, bx				     ; if( cx == bx )
1   325	021F  75 F1						     jne __Next
1   326
1   327	0221  8B C2						     mov ax, dx				     ; AX = DX
1   328
1   329	0223  C3						     ret
1   330	0224							     endp
1   331
1   332				     ;------------------------------------------------
    333
    334				     end		     Start
Turbo Assembler	 Version 4.1	    02/17/23 23:40:31	    Page 7
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/17/23"
??FILENAME			  Text	 "main	  "
??TIME				  Text	 "23:40:31"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0103H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MAIN
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CLRSCRN				  Near	 DGROUP:011D
H_CH				  Byte	 DGROUP:0174
LD_CH				  Byte	 DGROUP:0170
LT_CH				  Byte	 DGROUP:016F
PRINTBIN			  Near	 DGROUP:0208
PRINTBOX			  Near	 DGROUP:0175
PRINTCHAR			  Near	 DGROUP:012C
PRINTHRZLINE			  Near	 DGROUP:0141
PRINTVRTLINE			  Near	 DGROUP:0158
RD_CH				  Byte	 DGROUP:0172
RT_CH				  Byte	 DGROUP:0171
START				  Near	 DGROUP:0100
V_CH				  Byte	 DGROUP:0173
__ENDFUNC			  Near	 DGROUP:0157
__ENDFUNC			  Near	 DGROUP:016E
__NEXT				  Near	 DGROUP:0123
__NEXT				  Near	 DGROUP:0149
__NEXT				  Near	 DGROUP:0160
__NEXT				  Near	 DGROUP:0212

Macro Name

EXIT

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0224 Word	  Public  CODE
